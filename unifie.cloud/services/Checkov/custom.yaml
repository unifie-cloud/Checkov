 
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkov
  namespace: checkov
---
### View all resources EXCEPT secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: checkov-view
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - pods
  - replicationcontrollers
  - replicationcontrollers/scale
  - serviceaccounts
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - bindings
  - events
  - limitranges
  - namespaces/status
  - pods/log
  - pods/status
  - replicationcontrollers/status
  - resourcequotas
  - resourcequotas/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - controllerrevisions
  - daemonsets
  - deployments
  - deployments/scale
  - replicasets
  - replicasets/scale
  - statefulsets
  - statefulsets/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - deployments/scale
  - ingresses
  - networkpolicies
  - podsecuritypolicies
  - replicasets
  - replicasets/scale
  - replicationcontrollers/scale
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - podsecuritypolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  - clusterrolebindings
  - clusterroles
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: checkov
subjects:
- kind: ServiceAccount
  name: checkov
  namespace: checkov
roleRef:
  kind: ClusterRole
  name: checkov-view
  apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: batch/v1
# kind: Job
# metadata:
#   name: checkov2
#   namespace: checkov
#   annotations:
#     checkov.io/skip1: CKV_K8S_22=Checkov requires filesystem write access to dump resource definitions
#     checkov.io/skip2: CKV_K8S_38=Service Account is required for read-only API access
#     checkov.io/skip3: CKV_K8S_14=Preferring latest rules every run - image pull always
#     checkov.io/skip4: CKV_K8S_43=Preferring latest rules every run - image pull always 
# spec:
#   template:
#     metadata:
#       annotations:
#         seccomp.security.alpha.kubernetes.io/pod: runtime/default
#         checkov.io/skip1: CKV_K8S_22=Checkov requires filesystem write access to dump resource definitions
#         checkov.io/skip2: CKV_K8S_38=Service Account is required for read-only API access
#         checkov.io/skip3: CKV_K8S_14=Preferring latest rules every run - image pull always
#         checkov.io/skip4: CKV_K8S_43=Preferring latest rules every run - image pull always
#     spec:
#       securityContext:
#         runAsUser: 12000
#         runAsNonRoot: true
#       restartPolicy: Never
#       serviceAccountName: checkov
#       containers:
#         - name: checkov
#           env:
#             - name: CKV_SKIP_CHECK
#               value: "{{ .Values.CKV_SKIP_CHECK}}"
#           image: bridgecrew/checkov-k8s:latest
#           imagePullPolicy: Always
#           resources:
#             requests:
#               memory: "1Gi"
#               cpu: "500m"
#           securityContext:
#             allowPrivilegeEscalation: false
#             capabilities:
#               drop:
#                 - ALL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkov 
  annotations:
    checkov.io/skip1: CKV_K8S_22=Checkov requires filesystem write access to dump resource definitions
    checkov.io/skip2: CKV_K8S_38=Service Account is required for read-only API access
    checkov.io/skip3: CKV_K8S_14=Preferring latest rules every run - image pull always
    checkov.io/skip4: CKV_K8S_43=Preferring latest rules every run - image pull always 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkov
  template:
    metadata:
      labels:
        app: checkov
        ui-name: checkov
        name: checkov 
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        checkov.io/skip1: CKV_K8S_22=Checkov requires filesystem write access to dump resource definitions
        checkov.io/skip2: CKV_K8S_38=Service Account is required for read-only API access
        checkov.io/skip3: CKV_K8S_14=Preferring latest rules every run - image pull always
        checkov.io/skip4: CKV_K8S_43=Preferring latest rules every run - image pull always
    spec:
      securityContext:
        runAsUser: 12000
        runAsNonRoot: true
      # restartPolicy: Never
      serviceAccountName: checkov
      # imagePullSecrets:
      #   - name: aws-ecr-key 
      containers: 
        - name: checkov
          image: public.ecr.aws/g4a0y2u8/checkov:checkov-k8s-latest
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          env: 
            - name: CKV_SKIP_CHECK
              value: "{{ .Values.CKV_SKIP_CHECK}}"
            - name: NODE_HTTP_SERVER_USERNAME
              value: "{{ .Values.NODE_HTTP_SERVER_USERNAME}}" 
            - name: NODE_HTTP_SERVER_PASSWORD
              value: "{{ .Values.NODE_HTTP_SERVER_PASSWORD}}" 
          imagePullPolicy: Always # IfNotPresent 
          # command: ["/bin/bash", '-c', '--', "sleep 30000"] 
          command: ["/bin/bash", '-c', '--', "cd /app && mkdir -p /app/web && /app/run_checkov.sh -o junitxml > /app/web/index.xml && cd /app/web && junit2html index.xml && mv index.xml.html index.html  && http-server --no-dotfiles"] 
          ports:
            - containerPort: 8080
              name: ui

---
apiVersion: v1
kind: Service
metadata:
  labels:
    serviceType: checkov
  name: checkov 
spec:
  type: NodePort
  selector:
    app: checkov
  ports:
    - name: checkov
      port: 80
      protocol: TCP
      targetPort: 8080